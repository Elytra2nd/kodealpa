name: CI/CD — Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
      DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
      DEPLOY_PORT: ${{ secrets.DEPLOY_PORT || '22' }}
      DEPLOY_PATH: ${{ secrets.DEPLOY_PATH || '/var/www/kodealpa' }}

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Setup Node.js (untuk build assets)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      # 3. Install dependencies dan build assets
      - name: Install dependencies and build assets
        run: |
          npm ci
          npm run build

      # 4. Start ssh-agent
      - name: Start ssh-agent and add key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      # 5. Add server to known_hosts
      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p $DEPLOY_PORT -H $DEPLOY_HOST > ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      # 6. Deploy built assets ke server
      - name: Deploy built assets to server
        run: |
          # Create build directory if not exists
          ssh -p $DEPLOY_PORT $DEPLOY_USER@$DEPLOY_HOST \
            "mkdir -p $DEPLOY_PATH/public/build"
          
          # Sync built assets (delete old files)
          rsync -avz --delete \
            -e "ssh -p $DEPLOY_PORT" \
            public/build/ \
            $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH/public/build/

      # 7. Run remote deploy script
      - name: Run remote deploy script
        run: |
          ssh -o StrictHostKeyChecking=yes \
              -p $DEPLOY_PORT \
              $DEPLOY_USER@$DEPLOY_HOST \
              "bash $DEPLOY_PATH/deploy.sh"

      # 8. Verify deployment
      - name: Verify deployment
        run: |
          ssh -p $DEPLOY_PORT $DEPLOY_USER@$DEPLOY_HOST \
            "ls -la $DEPLOY_PATH/public/build/manifest.json && \
             test ! -f $DEPLOY_PATH/public/hot && \
             echo '✅ Deployment verified successfully!'"
