name: CI/CD ‚Äî Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
      DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
      DEPLOY_PORT: ${{ secrets.DEPLOY_PORT || '22' }}
      DEPLOY_PATH: ${{ secrets.DEPLOY_PATH || '/var/www/kodealpa' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm ci --legacy-peer-deps
          echo "‚úÖ Dependencies installed"

      - name: Type check (optional)
        continue-on-error: true
        run: |
          echo "Running type check..."
          npx tsc --noEmit || echo "‚ö†Ô∏è Type check has warnings"

      - name: Build for production
        env:
          NODE_ENV: production
          VITE_HMR_HOST: ''
        run: |
          echo "Building assets for production..."
          npx vite build
          echo "‚úÖ Build completed"

      - name: Verify build output
        run: |
          if [ ! -f "public/build/manifest.json" ]; then
            echo "‚ùå Build failed: manifest.json not found"
            exit 1
          fi
          echo "‚úÖ Build verified"
          echo "Manifest preview:"
          head -20 public/build/manifest.json
          echo ""
          echo "Build files:"
          ls -lh public/build/assets/ | head -10

      - name: Start ssh-agent and add key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p $DEPLOY_PORT -H $DEPLOY_HOST > ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Deploy built assets to server
        run: |
          echo "Deploying assets to server..."
          ssh -p $DEPLOY_PORT $DEPLOY_USER@$DEPLOY_HOST \
            "mkdir -p $DEPLOY_PATH/public/build"
          
          rsync -avz --delete \
            -e "ssh -p $DEPLOY_PORT" \
            --progress \
            public/build/ \
            $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH/public/build/
          
          echo "‚úÖ Assets deployed successfully"

      - name: Run remote deploy script
        run: |
          echo "Running deployment script on server..."
          ssh -o StrictHostKeyChecking=yes \
              -p $DEPLOY_PORT \
              $DEPLOY_USER@$DEPLOY_HOST \
              "bash $DEPLOY_PATH/deploy.sh"
          echo "‚úÖ Deployment script completed"

      - name: Verify deployment
        run: |
          echo "Verifying deployment..."
          ssh -p $DEPLOY_PORT $DEPLOY_USER@$DEPLOY_HOST \
            "test -f $DEPLOY_PATH/public/build/manifest.json && \
             test ! -f $DEPLOY_PATH/public/hot && \
             echo '‚úÖ Deployment verified successfully!' || \
             (echo '‚ùå Deployment verification failed' && exit 1)"

      - name: Deployment summary
        if: success()
        run: |
          echo "========================================="
          echo "üéâ Deployment Successful!"
          echo "========================================="
          echo "‚úÖ Assets built and deployed"
          echo "‚úÖ Server updated"
          echo "‚úÖ All checks passed"
          echo ""
          echo "üåê Site: https://codealpha-dungeon.tech"
          echo "‚ö†Ô∏è  Remember to hard refresh browser (Ctrl+Shift+R)"
