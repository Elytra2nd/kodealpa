name: CI/CD ‚Äî Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
      DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
      DEPLOY_PORT: ${{ secrets.DEPLOY_PORT || '22' }}
      DEPLOY_PATH: ${{ secrets.DEPLOY_PATH || '/var/www/kodealpa' }}
      ROOT_USER: root  # Add this

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for production
        env:
          NODE_ENV: production
          VITE_HMR_HOST: ''
        run: npm run build

      - name: Verify build output
        run: |
          if [ ! -f "public/build/manifest.json" ]; then
            echo "‚ùå Build failed"
            exit 1
          fi
          echo "‚úÖ Build verified"

      - name: Start ssh-agent and add key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p $DEPLOY_PORT -H $DEPLOY_HOST > ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      # ‚úÖ FIX PERMISSIONS BEFORE EVERYTHING (AS ROOT)
      - name: Fix all permissions on server
        run: |
          echo "üîê Fixing permissions on server..."
          ssh -p $DEPLOY_PORT $ROOT_USER@$DEPLOY_HOST << 'ENDSSH'
            cd /var/www/kodealpa
            
            # Fix ownership
            chown -R deploy:deploy .
            
            # Fix specific directories
            chown -R www-data:www-data storage bootstrap/cache
            
            # Set proper permissions
            chmod -R 755 .
            chmod -R 775 storage bootstrap/cache
            
            # Verify
            ls -ld storage/ bootstrap/cache/ public/build/
          ENDSSH
          echo "‚úÖ Permissions fixed"

      # Deploy built assets
      - name: Deploy built assets to server
        run: |
          echo "üì¶ Deploying assets..."
          rsync -avz --delete \
            -e "ssh -p $DEPLOY_PORT" \
            --chmod=D755,F644 \
            public/build/ \
            $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH/public/build/
          echo "‚úÖ Assets deployed"

      # Set final permissions for build
      - name: Set build permissions
        run: |
          ssh -p $DEPLOY_PORT $ROOT_USER@$DEPLOY_HOST \
            "cd $DEPLOY_PATH && \
             chown -R www-data:www-data public/build && \
             chmod -R 755 public/build"

      # Run deploy script
      - name: Run remote deploy script
        run: |
          echo "üöÄ Running deployment script..."
          ssh -o StrictHostKeyChecking=yes \
              -p $DEPLOY_PORT \
              $DEPLOY_USER@$DEPLOY_HOST \
              "bash $DEPLOY_PATH/deploy.sh"

      # Verify deployment
      - name: Verify deployment
        run: |
          echo "üîç Verifying deployment..."
          ssh -p $DEPLOY_PORT $DEPLOY_USER@$DEPLOY_HOST \
            "test -f $DEPLOY_PATH/public/build/manifest.json && \
             test ! -f $DEPLOY_PATH/public/hot && \
             echo '‚úÖ Deployment verified!' || \
             (echo '‚ùå Verification failed' && exit 1)"

      - name: Deployment summary
        if: success()
        run: |
          echo "========================================="
          echo "üéâ Deployment Successful!"
          echo "========================================="
          echo "‚úÖ Assets built and deployed"
          echo "‚úÖ Server updated"
          echo "‚úÖ All checks passed"
          echo ""
          echo "üåê Site: https://codealpha-dungeon.tech"
          echo "‚ö†Ô∏è  Hard refresh: Ctrl+Shift+R"
